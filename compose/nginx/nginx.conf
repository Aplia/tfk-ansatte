user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  gzip  on;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  upstream backend {
    server backend:8000;
  }

  # Default server which catches all entries without a proper domain
  # These are typically malicious or malformed requests
  server {
    listen 80 default_server;

    return 444;
  }

  server {
    listen 80;
    server_name ${DOMAIN_SPACE_LIST} *.ngrok.io localhost;
    charset     utf-8;

#    # Redirect http to https
#    if ($http_x_forwarded_proto = 'http') {
#        return 301 https://$host$request_uri;
#    }

    location /_health {
      add_header Content-Type text/html;
      access_log off;
      return 200 "<p>Healthy</p>";
    }

    location = / {
       root /usr/share/nginx/html/;
       index index.html;
    }

    location /backend {
      try_files $uri @proxy_to_backend;
    }

    location /backend/static {
      alias /usr/share/nginx/backend/;
    }

    location / {
      alias /usr/share/nginx/html/;
    }

    # web backend
    location @proxy_to_backend {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header User-Agent $http_user_agent;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_redirect off;
      proxy_pass   http://backend;
    }
  }
}
